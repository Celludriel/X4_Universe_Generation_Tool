//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.01 at 12:27:02 AM CEST 
//


package be.celludriel.universegenerator.model.xml.libraries;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for profilelookup.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="profilelookup"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="flat"/&gt;
 *     &lt;enumeration value="increasing"/&gt;
 *     &lt;enumeration value="decreasing"/&gt;
 *     &lt;enumeration value="bell"/&gt;
 *     &lt;enumeration value="inversebell"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "profilelookup")
@XmlEnum
public enum Profilelookup {


    /**
     * 
     *             Flat (linear) distribution, default if no profile specified
     *           
     * 
     */
    @XmlEnumValue("flat")
    FLAT("flat"),

    /**
     * 
     *             Higher numbers are more likely
     *           
     * 
     */
    @XmlEnumValue("increasing")
    INCREASING("increasing"),

    /**
     * 
     *             Lower numbers are more likely
     *           
     * 
     */
    @XmlEnumValue("decreasing")
    DECREASING("decreasing"),

    /**
     * 
     *             Numbers in the middle of the range are more likely
     *           
     * 
     */
    @XmlEnumValue("bell")
    BELL("bell"),

    /**
     * 
     *             Higher and lower numbers are more likely than those in the middle
     *           
     * 
     */
    @XmlEnumValue("inversebell")
    INVERSEBELL("inversebell");
    private final String value;

    Profilelookup(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Profilelookup fromValue(String v) {
        for (Profilelookup c: Profilelookup.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
