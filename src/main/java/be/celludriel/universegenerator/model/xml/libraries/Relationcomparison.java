//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.01 at 12:27:02 AM CEST 
//


package be.celludriel.universegenerator.model.xml.libraries;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for relationcomparison.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="relationcomparison"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="exact"/&gt;
 *     &lt;enumeration value="ge"/&gt;
 *     &lt;enumeration value="gt"/&gt;
 *     &lt;enumeration value="le"/&gt;
 *     &lt;enumeration value="lt"/&gt;
 *     &lt;enumeration value="not"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "relationcomparison")
@XmlEnum
public enum Relationcomparison {


    /**
     * 
     *             Relation is in range (default)
     *           
     * 
     */
    @XmlEnumValue("exact")
    EXACT("exact"),

    /**
     * 
     *             Relation is greater than or equal
     *           
     * 
     */
    @XmlEnumValue("ge")
    GE("ge"),

    /**
     * 
     *             Relation is greater than
     *           
     * 
     */
    @XmlEnumValue("gt")
    GT("gt"),

    /**
     * 
     *             Relation is less than or equal
     *           
     * 
     */
    @XmlEnumValue("le")
    LE("le"),

    /**
     * 
     *             Relation is less than
     *           
     * 
     */
    @XmlEnumValue("lt")
    LT("lt"),

    /**
     * 
     *             Relation is not in range
     *           
     * 
     */
    @XmlEnumValue("not")
    NOT("not");
    private final String value;

    Relationcomparison(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Relationcomparison fromValue(String v) {
        for (Relationcomparison c: Relationcomparison.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
