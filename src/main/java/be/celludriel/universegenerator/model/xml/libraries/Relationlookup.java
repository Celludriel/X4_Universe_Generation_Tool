//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.01 at 12:27:02 AM CEST 
//


package be.celludriel.universegenerator.model.xml.libraries;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for relationlookup.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="relationlookup"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="dock"/&gt;
 *     &lt;enumeration value="enemy"/&gt;
 *     &lt;enumeration value="friend"/&gt;
 *     &lt;enumeration value="kill"/&gt;
 *     &lt;enumeration value="killmilitary"/&gt;
 *     &lt;enumeration value="member"/&gt;
 *     &lt;enumeration value="nemesis"/&gt;
 *     &lt;enumeration value="neutral"/&gt;
 *     &lt;enumeration value="self"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "relationlookup")
@XmlEnum
public enum Relationlookup {

    @XmlEnumValue("dock")
    DOCK("dock"),
    @XmlEnumValue("enemy")
    ENEMY("enemy"),
    @XmlEnumValue("friend")
    FRIEND("friend"),
    @XmlEnumValue("kill")
    KILL("kill"),
    @XmlEnumValue("killmilitary")
    KILLMILITARY("killmilitary"),
    @XmlEnumValue("member")
    MEMBER("member"),
    @XmlEnumValue("nemesis")
    NEMESIS("nemesis"),
    @XmlEnumValue("neutral")
    NEUTRAL("neutral"),
    @XmlEnumValue("self")
    SELF("self");
    private final String value;

    Relationlookup(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Relationlookup fromValue(String v) {
        for (Relationlookup c: Relationlookup.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
