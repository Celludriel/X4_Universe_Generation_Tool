//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.01 at 12:27:02 AM CEST 
//


package be.celludriel.universegenerator.model.xml.libraries;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for roompopulationtypelookup.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="roompopulationtypelookup"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="build"/&gt;
 *     &lt;enumeration value="trade"/&gt;
 *     &lt;enumeration value="drones"/&gt;
 *     &lt;enumeration value="ships"/&gt;
 *     &lt;enumeration value="repair"/&gt;
 *     &lt;enumeration value="ammo"/&gt;
 *     &lt;enumeration value="bar"/&gt;
 *     &lt;enumeration value="administrative"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "roompopulationtypelookup")
@XmlEnum
public enum Roompopulationtypelookup {

    @XmlEnumValue("build")
    BUILD("build"),
    @XmlEnumValue("trade")
    TRADE("trade"),
    @XmlEnumValue("drones")
    DRONES("drones"),
    @XmlEnumValue("ships")
    SHIPS("ships"),
    @XmlEnumValue("repair")
    REPAIR("repair"),
    @XmlEnumValue("ammo")
    AMMO("ammo"),
    @XmlEnumValue("bar")
    BAR("bar"),
    @XmlEnumValue("administrative")
    ADMINISTRATIVE("administrative");
    private final String value;

    Roompopulationtypelookup(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Roompopulationtypelookup fromValue(String v) {
        for (Roompopulationtypelookup c: Roompopulationtypelookup.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
