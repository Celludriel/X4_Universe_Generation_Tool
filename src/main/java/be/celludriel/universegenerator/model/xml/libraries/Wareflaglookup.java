//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.01 at 12:27:02 AM CEST 
//


package be.celludriel.universegenerator.model.xml.libraries;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for wareflaglookup.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="wareflaglookup"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="allowplayerblueprint"/&gt;
 *     &lt;enumeration value="blueprint"/&gt;
 *     &lt;enumeration value="clothingmod"/&gt;
 *     &lt;enumeration value="crafting"/&gt;
 *     &lt;enumeration value="economy"/&gt;
 *     &lt;enumeration value="equipment"/&gt;
 *     &lt;enumeration value="illegal"/&gt;
 *     &lt;enumeration value="inventory"/&gt;
 *     &lt;enumeration value="gift"/&gt;
 *     &lt;enumeration value="rare"/&gt;
 *     &lt;enumeration value="allowdrop"/&gt;
 *     &lt;enumeration value="equipmentmod"/&gt;
 *     &lt;enumeration value="lockbox"/&gt;
 *     &lt;enumeration value="missiononly"/&gt;
 *     &lt;enumeration value="module"/&gt;
 *     &lt;enumeration value="paintmod"/&gt;
 *     &lt;enumeration value="personalupgrade"/&gt;
 *     &lt;enumeration value="resource"/&gt;
 *     &lt;enumeration value="scanner"/&gt;
 *     &lt;enumeration value="ship"/&gt;
 *     &lt;enumeration value="singlecraft"/&gt;
 *     &lt;enumeration value="tradeonly"/&gt;
 *     &lt;enumeration value="tradeware"/&gt;
 *     &lt;enumeration value="unbundleammo"/&gt;
 *     &lt;enumeration value="useritem"/&gt;
 *     &lt;enumeration value="volatile"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "wareflaglookup")
@XmlEnum
public enum Wareflaglookup {


    /**
     * 
     *             Allow Player Blueprint
     *           
     * 
     */
    @XmlEnumValue("allowplayerblueprint")
    ALLOWPLAYERBLUEPRINT("allowplayerblueprint"),

    /**
     * 
     *             Blueprint
     *           
     * 
     */
    @XmlEnumValue("blueprint")
    BLUEPRINT("blueprint"),

    /**
     * 
     *             Clothing Mod
     *           
     * 
     */
    @XmlEnumValue("clothingmod")
    CLOTHINGMOD("clothingmod"),

    /**
     * 
     *             Crafting
     *           
     * 
     */
    @XmlEnumValue("crafting")
    CRAFTING("crafting"),

    /**
     * 
     *             Economy
     *           
     * 
     */
    @XmlEnumValue("economy")
    ECONOMY("economy"),

    /**
     * 
     *             Equipment
     *           
     * 
     */
    @XmlEnumValue("equipment")
    EQUIPMENT("equipment"),

    /**
     * 
     *             Illegal
     *           
     * 
     */
    @XmlEnumValue("illegal")
    ILLEGAL("illegal"),

    /**
     * 
     *             Inventory
     *           
     * 
     */
    @XmlEnumValue("inventory")
    INVENTORY("inventory"),

    /**
     * 
     *             Gift
     *           
     * 
     */
    @XmlEnumValue("gift")
    GIFT("gift"),

    /**
     * 
     *             Rare
     *           
     * 
     */
    @XmlEnumValue("rare")
    RARE("rare"),

    /**
     * 
     *             Allow Drop
     *           
     * 
     */
    @XmlEnumValue("allowdrop")
    ALLOWDROP("allowdrop"),

    /**
     * 
     *             Equipment Mod
     *           
     * 
     */
    @XmlEnumValue("equipmentmod")
    EQUIPMENTMOD("equipmentmod"),

    /**
     * 
     *             Lockbox
     *           
     * 
     */
    @XmlEnumValue("lockbox")
    LOCKBOX("lockbox"),

    /**
     * 
     *             Mission Only
     *           
     * 
     */
    @XmlEnumValue("missiononly")
    MISSIONONLY("missiononly"),

    /**
     * 
     *             Module
     *           
     * 
     */
    @XmlEnumValue("module")
    MODULE("module"),

    /**
     * 
     *             Paint Mod
     *           
     * 
     */
    @XmlEnumValue("paintmod")
    PAINTMOD("paintmod"),

    /**
     * 
     *             Personal Upgrade
     *           
     * 
     */
    @XmlEnumValue("personalupgrade")
    PERSONALUPGRADE("personalupgrade"),

    /**
     * 
     *             Resource
     *           
     * 
     */
    @XmlEnumValue("resource")
    RESOURCE("resource"),

    /**
     * 
     *             Scanner
     *           
     * 
     */
    @XmlEnumValue("scanner")
    SCANNER("scanner"),

    /**
     * 
     *             Ship
     *           
     * 
     */
    @XmlEnumValue("ship")
    SHIP("ship"),

    /**
     * 
     *             Single Craft
     *           
     * 
     */
    @XmlEnumValue("singlecraft")
    SINGLECRAFT("singlecraft"),

    /**
     * 
     *             Trade Only
     *           
     * 
     */
    @XmlEnumValue("tradeonly")
    TRADEONLY("tradeonly"),

    /**
     * 
     *             Trade Ware
     *           
     * 
     */
    @XmlEnumValue("tradeware")
    TRADEWARE("tradeware"),

    /**
     * 
     *             Unbundle Ammo
     *           
     * 
     */
    @XmlEnumValue("unbundleammo")
    UNBUNDLEAMMO("unbundleammo"),

    /**
     * 
     *             User Item
     *           
     * 
     */
    @XmlEnumValue("useritem")
    USERITEM("useritem"),

    /**
     * 
     *             Volatile
     *           
     * 
     */
    @XmlEnumValue("volatile")
    VOLATILE("volatile");
    private final String value;

    Wareflaglookup(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Wareflaglookup fromValue(String v) {
        for (Wareflaglookup c: Wareflaglookup.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
